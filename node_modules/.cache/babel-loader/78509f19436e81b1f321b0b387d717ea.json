{"ast":null,"code":"var _jsxFileName = \"/Users/lendified/Desktop/local-storage/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      currentNote: \"\",\n      noteEditing: null,\n      currentEdit: \"\"\n    };\n\n    this.deleteNote = indexToDelete => {\n      let notes = [...this.state.notes].filter((note, index) => index !== indexToDelete);\n      this.setState({\n        notes\n      });\n    };\n\n    this.addNote = () => {\n      let notes = [...this.state.notes];\n      notes.push(this.state.currentNote);\n      this.setState({\n        notes,\n        currentNote: \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    var oldItems = JSON.parse(localStorage.getItem('testObject')) || [];\n    var newItem = {\n      product: 'owww'\n    };\n    oldItems.push(newItem);\n    localStorage.setItem('testObject', JSON.stringify(oldItems));\n    const myObj = localStorage.getItem(\"testObject\");\n\n    if (!myObj) {\n      var testObject = {\n        name: \"leonel\",\n        time: \"Date 2017-02-03T08:38:04.449Z\"\n      };\n      localStorage.setItem('testObject', JSON.stringify(testObject));\n    } else {\n      alert('obj');\n    }\n\n    const json = localStorage.getItem(\"notes\");\n    const notes = JSON.parse(json);\n\n    if (notes) {\n      this.setState(() => ({\n        notes\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.notes.length !== this.state.notes.length) {\n      const json = JSON.stringify(this.state.notes);\n      localStorage.setItem(\"notes\", json);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"localStorage Note-Taking Demo\"), React.createElement(\"textarea\", {\n      onChange: event => this.setState({\n        currentNote: event.target.value\n      }),\n      value: this.state.currentNote,\n      className: \"input\",\n      placeholder: \"Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.addNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Submit\"), this.state.notes.map((note, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, note, React.createElement(\"button\", {\n      onClick: () => this.deleteNote(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lendified/Desktop/local-storage/src/App.js"],"names":["React","Component","App","state","notes","currentNote","noteEditing","currentEdit","deleteNote","indexToDelete","filter","note","index","setState","addNote","push","componentDidMount","oldItems","JSON","parse","localStorage","getItem","newItem","product","setItem","stringify","myObj","testObject","name","time","alert","json","componentDidUpdate","prevProps","prevState","length","render","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n    notes: [],\n    currentNote: \"\",\n    noteEditing: null,\n    currentEdit: \"\"\n  };\n\n  componentDidMount() {\n\n    var oldItems = JSON.parse(localStorage.getItem('testObject')) || [];\n\n    var newItem = {\n        product: 'owww' \n    };\n\n    oldItems.push(newItem);\n\n    localStorage.setItem('testObject', JSON.stringify(oldItems));\n\n\n\n    const myObj = localStorage.getItem(\"testObject\");\n    if(!myObj){\n      var testObject ={name:\"leonel\", time:\"Date 2017-02-03T08:38:04.449Z\"};\n      localStorage.setItem('testObject', JSON.stringify(testObject));\n    }else{\n      alert('obj')\n    }\n    \n\n\n    const json = localStorage.getItem(\"notes\");\n    const notes = JSON.parse(json);\n    if (notes) {\n      this.setState(() => ({ notes }));\n    }\n  }\n\n  deleteNote = indexToDelete => {\n    let notes = [...this.state.notes].filter(\n      (note, index) => index !== indexToDelete\n    );\n    this.setState({ notes });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.notes.length !== this.state.notes.length) {\n      const json = JSON.stringify(this.state.notes);\n      localStorage.setItem(\"notes\", json);\n    }\n  }\n\n\n  addNote = () => {\n    let notes = [...this.state.notes];\n    notes.push(this.state.currentNote);\n    this.setState({ notes, currentNote: \"\" });\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>localStorage Note-Taking Demo</h1>\n\n        <textarea\n          onChange={event => this.setState({ currentNote: event.target.value })}\n          value={this.state.currentNote}\n          className=\"input\"\n          placeholder=\"Notes\"\n        />\n        <br/>\n        <button className=\"button\" onClick={this.addNote}>\n          Submit\n        </button>\n\n        {\n          this.state.notes.map((note, index) => (\n            <div key={index}>\n              {note}\n              <button onClick={() => this.deleteNote(index)}>Delete</button>\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}